(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{422:function(s,a,n){"use strict";n.r(a);var t=n(14),r=Object(t.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"js内置对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js内置对象"}},[s._v("#")]),s._v(" JS内置对象")]),s._v(" "),a("p",[s._v("什么是对象")]),s._v(" "),a("p",[s._v("JavaScript 中的所有事物都是对象，如:字符串、数值、数组、函数等，每个对象带有属性和方法。")]),s._v(" "),a("p",[s._v("对象的属性：反映该对象某些特定的性质的，如：字符串的长度、图像的长宽等；")]),s._v(" "),a("p",[s._v("对象的方法：能够在对象上执行的动作。例如，表单的“提交”(Submit)，时间的“获取”(getYear)等；")]),s._v(" "),a("p",[s._v("JavaScript 提供多个内建对象，比如 String、Date、Array 等等，使用对象前先定义，如下使用数组对象：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('  var objectName =new Array();//使用new关键字定义对象\n或者\n  var objectName =[];\n访问对象属性的语法:\nobjectName.propertyName\n如使用 Array 对象的 length 属性来获得数组的长度：\nvar myarray=new Array(6);//定义数组对象\nvar myl=myarray.length;//访问数组长度length属性\n以上代码执行后，myl的值将是：6\n访问对象的方法：\nobjectName.methodName()\n如使用string 对象的 toUpperCase() 方法来将文本转换为大写：\nvar mystr="Hello world!";//创建一个字符串\nvar request=mystr.toUpperCase(); //使用字符串对象方法\n以上代码执行后，request的值是：HELLO WORLD!\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h2",{attrs:{id:"date-日期对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date-日期对象"}},[s._v("#")]),s._v(" Date 日期对象")]),s._v(" "),a("p",[s._v("日期对象可以储存任意一个日期，并且可以精确到毫秒数（1/1000 秒）。")]),s._v(" "),a("p",[s._v("定义一个时间对象 :")]),s._v(" "),a("p",[s._v("var Udate=new Date();")]),s._v(" "),a("p",[s._v("注意:使用关键字new，Date()的首字母必须大写。")]),s._v(" "),a("p",[s._v("使 Udate 成为日期对象，并且已有初始值：当前时间(当前电脑系统时间)。")]),s._v(" "),a("p",[s._v("如果要自定义初始值，可以用以下方法：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var d = new Date(2012, 10, 1);  //2012年10月1日\nvar d = new Date('Oct 1, 2012'); //2012年10月1日\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("我们最好使用下面介绍的“方法”来严格定义时间。\n访问方法语法：“<日期对象>.<方法>”\nDate对象中处理时间和日期的常用方法：")]),s._v(" "),a("h2",{attrs:{id:"返回-设置年份方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回-设置年份方法"}},[s._v("#")]),s._v(" 返回/设置年份方法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('get/setFullYear() 返回/设置年份，用四位数表示。\nvar mydate=new Date();//当前时间2014年3月6日\ndocument.write(mydate+"<br>");//输出当前时间\ndocument.write(mydate.getFullYear()+"<br>");//输出当前年份\nmydate.setFullYear(81); //设置年份\ndocument.write(mydate+"<br>"); //输出年份被设定为 0081年。\n注意:不同浏览器， mydate.setFullYear(81)结果不同，年份被设定为 0081或81两种情况。\n结果:\nThu Mar 06 2014 10:57:47 GMT+0800\n2014\nThu Mar 06 0081 10:57:47 GMT+0800\n注意:\n1.结果格式依次为：星期、月、日、年、时、分、秒、时区。(火狐浏览器)\n2. 不同浏览器，时间格式有差异。\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h2",{attrs:{id:"返回星期方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回星期方法"}},[s._v("#")]),s._v(" 返回星期方法")]),s._v(" "),a("p",[s._v("getDay() 返回星期，返回的是0-6的数字，0 表示星期天。如果要返回相对应“星期”，通过数组完成，代码如下:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  var mydate=new Date();//定义日期对象\n  var weekday=["星期日","星期一","星期二","星期三","星期四","星期五","星期六"];\n//定义数组对象,给每个数组项赋值\n  var mynum=mydate.getDay();//返回值存储在变量mynum中\n  document.write(mydate.getDay());//输出getDay()获取值\n  document.write("今天是："+ weekday[mynum]);//输出星期几\n<\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("注意：以上代码是在2014年3月7日，星期五运行。")]),s._v(" "),a("p",[s._v("结果:")]),s._v(" "),a("p",[s._v("5")]),s._v(" "),a("p",[s._v("今天是：星期五")]),s._v(" "),a("h2",{attrs:{id:"返回-设置时间方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回-设置时间方法"}},[s._v("#")]),s._v(" 返回/设置时间方法")]),s._v(" "),a("p",[s._v("get/setTime() 返回/设置时间，单位毫秒数，计算从 1970 年 1 月 1 日零时到日期对象所指的日期的毫秒数。")]),s._v(" "),a("p",[s._v("如果将目前日期对象的时间推迟1小时，代码如下:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  var mydate=new Date();\n  document.write("当前时间："+mydate+"<br>");\n  mydate.setTime(mydate.getTime() + 60 * 60 * 1000);\n  document.write("推迟一小时时间：" + mydate);\n<\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("结果:")]),s._v(" "),a("p",[s._v("当前时间：Thu Mar 6 11:46:27 UTC+0800 2014\n推迟一小时时间：Thu Mar 6 12:46:27 UTC+0800 2014\n注意:")]),s._v(" "),a("ol",[a("li",[s._v("一小时 60 分，一分 60 秒，一秒 1000 毫秒")]),s._v(" "),a("li",[s._v("时间推迟 1 小时,就是: “x.setTime(x.getTime() + 60 * 60 * 1000);”")])]),s._v(" "),a("h2",{attrs:{id:"string-字符串对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-字符串对象"}},[s._v("#")]),s._v(" String 字符串对象")]),s._v(" "),a("p",[s._v('在之前的学习中已经使用字符串对象了，定义字符串的方法就是直接赋值。比如：\nvar mystr = "I love JavaScript!"\n定义mystr字符串后，我们就可以访问它的属性和方法。\n访问字符串对象的属性length:\nstringObject.length; 返回该字符串的长度。\nvar mystr="Hello World!";\nvar myl=mystr.length;\n以上代码执行后，myl 的值将是：12\n访问字符串对象的方法：\n使用 String 对象的 toUpperCase() 方法来将字符串小写字母转换为大写：\nvar mystr="Hello world!";\nvar mynum=mystr.toUpperCase();\n以上代码执行后，mynum 的值是：HELLO WORLD!')]),s._v(" "),a("p",[s._v("####返回指定位置的字符\ncharAt() 方法可返回指定位置的字符。返回的字符是长度为 1 的字符串。\n语法:\nstringObject.charAt(index)\n参数说明：")]),s._v(" "),a("p",[s._v("注意：1.字符串中第一个字符的下标是 0。最后一个字符的下标为字符串长度减一（string.length-1）。\n2.如果参数 index 不在 0 与 string.length-1 之间，该方法将返回一个空字符串。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('如:在字符串 "I love JavaScript!" 中，返回位置2的字符：\n<script type="text/javascript">\n  var mystr="I love JavaScript!"\n  document.write(mystr.charAt(2));\n<\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("注意：一个空格也算一个字符。\n以上代码的运行结果：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("l\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"返回指定的字符串首次出现的位置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回指定的字符串首次出现的位置"}},[s._v("#")]),s._v(" 返回指定的字符串首次出现的位置")]),s._v(" "),a("p",[s._v("indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。\n语法")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("stringObject.indexOf(substring, startpos)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("参数说明：")]),s._v(" "),a("p",[s._v("说明：")]),s._v(" "),a("p",[s._v("1.该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 substring。")]),s._v(" "),a("p",[s._v("2.可选参数，从stringObject的startpos位置开始查找substring，如果没有此参数将从stringObject的开始位置查找。")]),s._v(" "),a("p",[s._v("3.如果找到一个 substring，则返回 substring 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。")]),s._v(" "),a("p",[s._v("注意：1.indexOf() 方法区分大小写。")]),s._v(" "),a("p",[s._v("2.如果要检索的字符串值没有出现，则该方法返回 -1。")]),s._v(" "),a("p",[s._v('例如: 对 "I love JavaScript!" 字符串内进行不同的检索：')]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  var str="I love JavaScript!"\n  document.write(str.indexOf("I") + "<br />");\n  document.write(str.indexOf("v") + "<br />");\n  document.write(str.indexOf("v",8));\n<\/script>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("以上代码的输出：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("0\n4\n9\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"字符串分割split"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串分割split"}},[s._v("#")]),s._v(" 字符串分割split()")]),s._v(" "),a("p",[s._v("知识讲解：\nsplit() 方法将字符串分割为字符串数组，并返回此数组。\n语法：\nstringObject.split(separator,limit)\n参数说明:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('注意：如果把空字符串 ("") 用作 separator，那么 stringObject 中的每个字符之间都会被分割。\n我们将按照不同的方式来分割字符串：\n使用指定符号分割字符串，代码如下:\nvar mystr = "www.imooc.com";\ndocument.write(mystr.split(".")+"<br>");\ndocument.write(mystr.split(".", 2)+"<br>");\n运行结果:\nwww,imooc,com\nwww,imooc\n将字符串分割为字符，代码如下：\ndocument.write(mystr.split("")+"<br>");\ndocument.write(mystr.split("", 5));\n运行结果:\nw,w,w,.,i,m,o,o,c,.,c,o,m\nw,w,w,.,i\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h2",{attrs:{id:"提取字符串substring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提取字符串substring"}},[s._v("#")]),s._v(" 提取字符串substring()")]),s._v(" "),a("p",[s._v("substring() 方法用于提取字符串中介于两个指定下标之间的字符。\n语法:\nstringObject.substring(startPos,stopPos)\n参数说明:")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('注意：\n1. 返回的内容是从 <strong>start开始(包含start位置的字符)到 stop-1 处的所有字符，其长度为 stop 减start。</strong>\n2. 如果参数 start 与 stop 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。\n3. 如果 start 比 stop 大，那么该方法在提取子串之前会先交换这两个参数。\n使用 substring() 从字符串中提取字符串，代码如下：\n<script type="text/javascript">\n  var mystr="I love JavaScript";\n  document.write(mystr.substring(7));\n  document.write(mystr.substring(2,6));\n<\/script>\n运行结果:\nJavaScript\nlove\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"提取指定数目的字符substr"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#提取指定数目的字符substr"}},[s._v("#")]),s._v(" 提取指定数目的字符substr()")]),s._v(" "),a("p",[s._v("substr() 方法从字符串中提取从 startPos位置开始的指定数目的字符串。\n语法:")]),s._v(" "),a("h3",{attrs:{id:"stringobject-substr-startpos-length"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stringobject-substr-startpos-length"}},[s._v("#")]),s._v(" stringObject.substr(startPos,length)")]),s._v(" "),a("p",[s._v("参数说明:")]),s._v(" "),a("p",[s._v("注意：如果参数startPos是负数，从字符串的尾部开始算起的位置。也就是说，-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。\n如果startPos为负数且绝对值大于字符串长度，startPos为0。\n使用 substr() 从字符串中提取一些字符，代码如下：\n"),a("script",{attrs:{type:"text/javascript"}},[s._v("\nvar mystr=&quot;I love JavaScript!&quot;;\ndocument.write(mystr.substr(7));\ndocument.write(mystr.substr(2,4));\n")]),s._v("\n运行结果：\nJavaScript!\nlove\nMath对象\nMath对象，提供对数据的数学计算。\n使用 Math 的属性和方法，代码如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  var mypi=Math.PI; \n  var myabs=Math.abs(-15);\n  document.write(mypi);\n  document.write(myabs);\n<\/script>\n运行结果:\n3.141592653589793\n15\n注意：Math 对象是一个固有的对象，无需创建它，直接把 Math 作为对象使用就可以调用其所有属性和方法。这是它与Date,String对象的区别。\nMath 对象属性\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"math-对象方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#math-对象方法"}},[s._v("#")]),s._v(" Math 对象方法")]),s._v(" "),a("p",[s._v("以上方法不做全部讲解，只讲解部分方法。此节没有任务，快快进入下节学习。")]),s._v(" "),a("p",[s._v("向上取整ceil()")]),s._v(" "),a("p",[s._v("ceil() 方法可对一个数进行向上取整。")]),s._v(" "),a("p",[s._v("语法:\nMath.ceil(x)\n参数说明:")]),s._v(" "),a("p",[s._v("注意：它返回的是大于或等于x，并且与x最接近的整数。\n我们将把 ceil() 方法运用到不同的数字上，代码如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  document.write(Math.ceil(0.8) + "<br />")\n  document.write(Math.ceil(6.3) + "<br />")\n  document.write(Math.ceil(5) + "<br />")\n  document.write(Math.ceil(3.5) + "<br />")\n  document.write(Math.ceil(-5.1) + "<br />")\n  document.write(Math.ceil(-5.9))\n<\/script>\n\n运行结果：\n1\n7\n5\n4\n-5\n-5\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("h2",{attrs:{id:"向下取整floor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#向下取整floor"}},[s._v("#")]),s._v(" 向下取整floor()")]),s._v(" "),a("p",[s._v("floor() 方法可对一个数进行向下取整。\n语法:\nMath.floor(x)\n参数说明：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('注意：返回的是小于或等于x，并且与 x 最接近的整数。\n我们将在不同的数字上使用 floor() 方法，代码如下:\n<script type="text/javascript">\n  document.write(Math.floor(0.8)+ "<br>")\n  document.write(Math.floor(6.3)+ "<br>")\n  document.write(Math.floor(5)+ "<br>")\n  document.write(Math.floor(3.5)+ "<br>")\n  document.write(Math.floor(-5.1)+ "<br>")\n  document.write(Math.floor(-5.9))\n<\/script>\n运行结果：\n0\n6\n5\n3\n-6\n-6\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"四舍五入round"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四舍五入round"}},[s._v("#")]),s._v(" 四舍五入round()")]),s._v(" "),a("p",[s._v("round() 方法可把一个数字四舍五入为最接近的整数。\n语法:\nMath.round(x)\n参数说明：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('注意：\n1. 返回与 x 最接近的整数。\n2. 对于 0.5，该方法将进行上舍入。(5.5 将舍入为 6)\n3. 如果 x 与两侧整数同等接近，则结果接近 +∞方向的数字值 。(如 -5.5 将舍入为 -5; -5.52 将舍入为 -6),如下图:\n\n把不同的数舍入为最接近的整数,代码如下：\n<script type="text/javascript">\n document.write(Math.round(1.6)+ "<br>");\n document.write(Math.round(2.5)+ "<br>");\n document.write(Math.round(0.49)+ "<br>");\n document.write(Math.round(-6.4)+ "<br>");\n document.write(Math.round(-6.6));\n<\/script>\n运行结果：\n2\n3\n0\n-6\n-7\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h2",{attrs:{id:"随机数-random"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#随机数-random"}},[s._v("#")]),s._v(" 随机数 random()")]),s._v(" "),a("p",[s._v("random() 方法可返回介于 0 ~ 1（大于或等于 0 但小于 1 )之间的一个随机数。\n语法：\nMath.random();\n注意：返回一个大于或等于 0 但小于 1 的符号为正的数字值。\n我们取得介于 0 到 1 之间的一个随机数，代码如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  document.write(Math.random());\n<\/script>\n运行结果：\n0.190305486195328  \n注意:因为是随机数，所以每次运行结果不一样，但是0 ~ 1的数值。\n获得0 ~ 10之间的随机数，代码如下:\n<script type="text/javascript">\n  document.write((Math.random())*10);\n<\/script>\n运行结果：\n8.72153625893887\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h2",{attrs:{id:"array-数组对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#array-数组对象"}},[s._v("#")]),s._v(" Array 数组对象")]),s._v(" "),a("p",[s._v("数组对象是一个对象的集合，里边的对象可以是不同类型的。数组的每一个成员对象都有一个“下标”，用来表示它在数组中的位置，是从零开始的\n数组定义的方法：")]),s._v(" "),a("ol",[a("li",[s._v("定义了一个空数组:\nvar  数组名= new Array();")]),s._v(" "),a("li",[s._v("定义时指定有n个空元素的数组：\nvar 数组名 =new Array(n);\n3.定义数组的时候，直接初始化数据：\nvar  数组名 = [<元素1>, <元素2>, <元素3>...];\n我们定义myArray数组，并赋值，代码如下：\nvar myArray = [2, 8, 6];\n说明：定义了一个数组 myArray，里边的元素是：myArray[0] = 2; myArray[1] = 8; myArray[2] = 6。\n数组元素使用：\n数组名[下标] = 值;\n注意: 数组的下标用方括号括起来，从0开始。\n数组属性：\nlength 用法：<数组对象>.length；返回：数组的长度，即数组里有多少个元素。它等于数组里最后一个元素的下标加一。\n数组方法：")])]),s._v(" "),a("p",[s._v("以上方法不做全部讲解，只讲解部分方法。此节没有任务，快快进入下节学习。")]),s._v(" "),a("h2",{attrs:{id:"数组连接concat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组连接concat"}},[s._v("#")]),s._v(" 数组连接concat()")]),s._v(" "),a("p",[s._v("concat() 方法用于连接两个或多个数组。此方法返回一个新数组，不改变原来的数组。\n语法\narrayObject.concat(array1,array2,...,arrayN)\n参数说明：")]),s._v(" "),a("p",[s._v("注意:  该方法不会改变现有的数组，而仅仅会返回被连接数组的一个副本。\n我们创建一个数组，将把 concat() 中的参数连接到数组 myarr 中，代码如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  var mya = new Array(3);\n  mya[0] = "1";\n  mya[1] = "2";\n  mya[2] = "3";\n  document.write(mya.concat(4,5)+"<br>");\n  document.write(mya); \n<\/script>\n运行结果：\n1,2,3,4,5\n1,2,3\n我们创建了三个数组，然后使用 concat() 把它们连接起来，代码如下：\n<script type="text/javascript">\n  var mya1= new Array("hello!")\n  var mya2= new Array("I","love");\n  var mya3= new Array("JavaScript","!");\n  var mya4=mya1.concat(mya2,mya3);\n  document.write(mya4);\n<\/script>\n运行结果：\nhello!,I,love,JavaScript,!\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h2",{attrs:{id:"指定分隔符连接数组元素join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#指定分隔符连接数组元素join"}},[s._v("#")]),s._v(" 指定分隔符连接数组元素join()")]),s._v(" "),a("p",[s._v("join()方法用于把数组中的所有元素放入一个字符串。元素是通过指定的分隔符进行分隔的。\n语法：\narrayObject.join(分隔符)\n参数说明:")]),s._v(" "),a("p",[s._v("注意：返回一个字符串，该字符串把数组中的各个元素串起来，用<分隔符>置于元素与元素之间。这个方法不影响数组原本的内容。 我们使用join（）方法，将数组的所有元素放入一个字符串中，代码如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  var myarr = new Array(3);\n  myarr[0] = "I";\n  myarr[1] = "love";\n  myarr[2] = "JavaScript";\n  document.write(myarr.join());\n<\/script>\n运行结果：\nI,love,JavaScript\n我们将使用分隔符来分隔数组中的元素，代码如下：\n<script type="text/javascript">\n  var myarr = new Array(3)\n  myarr[0] = "I";\n  myarr[1] = "love";\n  myarr[2] = "JavaScript";\n  document.write(myarr.join("."));\n<\/script>\n运行结果：\nI.love.JavaScript\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("h2",{attrs:{id:"颠倒数组元素顺序reverse"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#颠倒数组元素顺序reverse"}},[s._v("#")]),s._v(" 颠倒数组元素顺序reverse()")]),s._v(" "),a("p",[s._v("reverse() 方法用于颠倒数组中元素的顺序。\n语法：\narrayObject.reverse()\n注意：该方法会改变原来的数组，而不会创建新的数组。\n定义数组myarr并赋值，然后颠倒其元素的顺序：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  var myarr = new Array(3)\n  myarr[0] = "1"\n  myarr[1] = "2"\n  myarr[2] = "3"\n  document.write(myarr + "<br />")\n  document.write(myarr.reverse())\n<\/script>\n运行结果：\n1,2,3\n3,2,1\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h2",{attrs:{id:"选定元素slice"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选定元素slice"}},[s._v("#")]),s._v(" 选定元素slice()")]),s._v(" "),a("p",[s._v("slice() 方法可从已有的数组中返回选定的元素。\n语法\narrayObject.slice(start,end)\n参数说明：")]),s._v(" "),a("p",[s._v("1.返回一个新的数组，包含从 start 到 end （不包括该元素）的 arrayObject 中的元素。\n2. 该方法并不会修改数组，而是返回一个子数组。\n注意：")]),s._v(" "),a("ol",[a("li",[s._v("可使用负值从数组的尾部选取元素。\n2.如果 end 未被规定，那么 slice() 方法会选取从 start 到数组结尾的所有元素。")]),s._v(" "),a("li",[s._v("String.slice() 与 Array.slice() 相似。\n我们将创建一个新数组，然后从其中选取的元素，代码如下：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  var myarr = new Array(1,2,3,4,5,6);\n  document.write(myarr + "<br>");\n  document.write(myarr.slice(2,4) + "<br>");\n  document.write(myarr);\n<\/script>\n运行结果：\n1,2,3,4,5,6\n3,4\n1,2,3,4,5,6\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"数组排序sort"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组排序sort"}},[s._v("#")]),s._v(" 数组排序sort()")]),s._v(" "),a("p",[s._v("sort()方法使数组中的元素按照一定的顺序排列。\n语法:\narrayObject.sort(方法函数)\n参数说明：")]),s._v(" "),a("p",[s._v("1.如果不指定<方法函数>，则按unicode码顺序排列。\n2.如果指定<方法函数>，则按<方法函数>所指定的排序方法排序。\nmyArray.sort(sortMethod);\n注意: 该函数要比较两个值，然后返回一个用于说明这两个值的相对顺序的数字。比较函数应该具有两个参数 a 和 b，其返回值如下：\n若返回值<=-1，则表示 A 在排序后的序列中出现在 B 之前。\n若返回值>-1 && <1，则表示 A 和 B 具有相同的排序顺序。\n若返回值>=1，则表示 A 在排序后的序列中出现在 B 之后。\n1.使用sort()将数组进行排序，代码如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<script type="text/javascript">\n  var myarr1 = new Array("Hello","John","love","JavaScript"); \n  var myarr2 = new Array("80","16","50","6","100","1");\n  document.write(myarr1.sort()+"<br>");\n  document.write(myarr2.sort());\n<\/script>\n运行结果：\nHello,JavaScript,John,love\n1,100,16,50,6,80\n注意:上面的代码没有按照数值的大小对数字进行排序。\n2.如要实现这一点，就必须使用一个排序函数，代码如下：\n<script type="text/javascript">\n  function sortNum(a,b) {\n  return a - b;\n //升序，如降序，把“a - b”该成“b - a”\n}\n var myarr = new Array("80","16","50","6","100","1");\n  document.write(myarr + "<br>");\n  document.write(myarr.sort(sortNum));\n<\/script>\n运行结果：\n80,16,50,6,100,1\n1,6,16,50,80,100\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("h2",{attrs:{id:"实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实例"}},[s._v("#")]),s._v(" 实例：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<!DOCTYPE  HTML>\n<html >\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />\n<title>系好安全带,准备启航</title>\n\n<script type="text/javascript">\n    var mydate=new Date();\n    var weekday = ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"];\n    document.write(mydate.getFullYear()+"年"+(mydate.getMonth()+1)+"月"+mydate.getDate()+"日"+" "+weekday[mydate.getDay()]);\n  //通过javascript的日期对象来得到当前的日期，并输出\n  \n  //成绩是一长窜的字符串不好处理，找规律后分割放到数组里更好操作哦\n  var scoreStr = "小明:87;小花:81;小红:97;小天:76;小张:74;小小:94;小西:90;小伍:76;小迪:64;小曼:76";\n var scoreArry = scoreStr.split(";");\n var sum = 0;\n var avg = 0;\n for(var i = 0;i < scoreArry.length;i++){\n     sum = sum + parseInt(scoreArry[i].slice(3,5));\n }\n \n document.write("<br>"+sum+"<br/>");\n var avg = sum/(scoreArry.length);\n document.write(Math.round(avg));\n\n  //从数组中将成绩撮出来，然后求和取整，并输出\n<\/script>\n</head>\n<body>\n</body>\n</html>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);