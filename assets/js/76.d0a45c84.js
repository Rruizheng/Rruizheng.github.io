(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{429:function(t,s,a){"use strict";a.r(s);var e=a(14),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"原型链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[t._v("#")]),t._v(" 原型链")]),t._v(" "),s("p",[t._v("JavaScript 中的原型链（Prototype Chain）是一种机制，用于实现对象之间的继承关系。每个对象都有一个内部属性 "),s("code",[t._v("[[Prototype]]")]),t._v("，它指向该对象的原型。原型是一个普通对象，也可以拥有自己的原型，从而形成一个链式结构，即原型链。")]),t._v(" "),s("p",[t._v("当访问一个对象的属性或方法时，如果该对象本身没有这个属性或方法，JavaScript 引擎会沿着原型链向上查找，直至找到该属性或方法或者到达原型链的顶端（即 "),s("code",[t._v("Object.prototype")]),t._v("）。这样，通过原型链，对象可以继承其原型对象的属性和方法。")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("__proto__")]),t._v(" 属性：每个对象都有一个 "),s("code",[t._v("__proto__")]),t._v(" 属性，指向该对象的原型。在访问对象的属性时，如果对象本身没有该属性，会通过 "),s("code",[t._v("__proto__")]),t._v(" 属性沿着原型链查找。")]),t._v(" "),s("li",[t._v("prototype 属性：函数对象（函数也是对象）拥有一个 "),s("code",[t._v("prototype")]),t._v(" 属性，该属性指向一个对象，即函数的原型对象。通过原型链，实例对象可以继承函数原型对象的属性和方法。")]),t._v(" "),s("li",[t._v("构造函数与实例对象：构造函数是用于创建对象的函数，通过 "),s("code",[t._v("new")]),t._v(" 关键字调用构造函数会生成一个实例对象。实例对象的 "),s("code",[t._v("__proto__")]),t._v(" 属性指向构造函数的 "),s("code",[t._v("prototype")]),t._v(" 属性，从而构成原型链。")]),t._v(" "),s("li",[t._v("原型继承：JavaScript 中的原型继承是通过原型链实现的。当一个对象作为另一个对象的原型时，后者可以继承前者的属性和方法。")]),t._v(" "),s("li",[t._v("原型链的终点：原型链的终点是 "),s("code",[t._v("Object.prototype")]),t._v("，它是所有对象的顶层原型。它的 "),s("code",[t._v("__proto__")]),t._v(" 为 "),s("code",[t._v("null")]),t._v("，表示没有更高层的原型。")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("构造函数：new调用的函数 Foo")])]),t._v(" "),s("li",[s("p",[t._v("原型对象：构造函数的prototype属性。显性原型 Foo.prototype")])]),t._v(" "),s("li",[s("p",[t._v("实例：new构造函数生成的对象 foo")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("foo.__proto__ === Foo.prototype")]),t._v(" 实例对象的 "),s("code",[t._v("__proto__")]),t._v(" 属性指向构造函数的 "),s("code",[t._v("prototype")]),t._v(" 属性")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("foo.__proto__ === foo.constructor.prototype")]),t._v(" 实例对象的 "),s("code",[t._v("__proto__")]),t._v(" 属性指向构造函数的 "),s("code",[t._v("prototype")]),t._v(" 属性")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Foo.constructor === Function")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Foo.__proto__ === Function.prototype")])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Function._proto_ === Object.prototype")]),t._v(" 原型链的终点是 "),s("code",[t._v("Object.prototype")])])]),t._v(" "),s("li",[s("p",[t._v("instanceof的原理"),s("code",[t._v("foo._proto_ === Foo.prototype")]),t._v("。实例是不是由这个构造函数生成的")])])]),t._v(" "),s("h2",{attrs:{id:"创建对象的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建对象的方法"}},[t._v("#")]),t._v(" 创建对象的方法")]),t._v(" "),s("ul",[s("li",[t._v("字面量，构造函数 Object")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var a = {name: 'a'};\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ul",[s("li",[t._v("new 构造函数，构造函数 A")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var A = function() {\n    this.name = 'a';\n}\nvar a = new A();\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("ul",[s("li",[t._v("Object.create，")])]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var A = {name: 'a'};\nvar a = Object.create(A);\n// a {}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("h2",{attrs:{id:"new一个对象的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new一个对象的过程"}},[t._v("#")]),t._v(" new一个对象的过程")]),t._v(" "),s("p",[t._v("1.创建一个空对象，将它的引用赋给this，继承函数的原型。")]),t._v(" "),s("p",[t._v("2.通过this将属性和方法添加至这个对象。")]),t._v(" "),s("p",[t._v("3.最后返回this指向的新对象。")]),t._v(" "),s("div",{staticClass:"language-javascript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("myNew")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("constructor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个空对象，继承构造函数的原型")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使得obj.__proto__ = constructor.prototype")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("constructor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用构造函数，将 this 绑定到新创建的对象上")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// constructor执行的this执行obj")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果构造函数返回了一个对象，则返回该对象；否则返回新创建的对象")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'object'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" obj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("h2",{attrs:{id:"object-create的过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#object-create的过程"}},[t._v("#")]),t._v(" Object.create的过程")]),t._v(" "),s("p",[t._v("Object.create()方法创建一个新对象，使用现有的对象来提供新创建的对象的__proto__")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("var A = {name: 'a'};\nvar a = Object.create(A);\na.__proto__ === A;\n\na.__proto__.name = a;\na.constructor === Object  // true\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);