(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{398:function(s,n,a){"use strict";a.r(n);var e=a(14),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"css设置值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#css设置值"}},[s._v("#")]),s._v(" CSS设置值")]),s._v(" "),n("blockquote",[n("p",[n("strong",[s._v("颜色值")])])]),s._v(" "),n("p",[s._v("在网页中的颜色设置是非常重要，有字体颜色（color）、背景颜色（background-color）、边框颜色（border）等，设置颜色的方法也有很多种：")]),s._v(" "),n("p",[s._v("1、英文命令颜色")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("p{color:red;}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("2、RGB颜色")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("p{color:rgb(133,45,200);}\n每一项的值可以是 0~255 之间的整数，也可以是 0%~100% 的百分数。如：\np{color:rgb(20%,33%,25%);}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("3、十六进制颜色")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("p{color:#00ffff;}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("blockquote",[n("p",[n("strong",[s._v("长度值")])])]),s._v(" "),n("p",[s._v("长度单位总结一下，目前比较常用到px（像素）、em、% 百分比，要注意其实这三种单位都是相对单位。")]),s._v(" "),n("p",[s._v("1、像素")]),s._v(" "),n("p",[s._v("像素为什么是相对单位呢？因为像素指的是显示器上的小点（CSS规范中假设“90像素=1英寸”）。实际情况是浏览器会使用显示器的实际像素值有关，在目前大多数的设计者都倾向于使用像素（px）作为单位。")]),s._v(" "),n("p",[s._v("2、em")]),s._v(" "),n("p",[s._v("就是本元素给定字体的 font-size 值，如果元素的 font-size 为 14px ，那么 1em = 14px；如果 font-size 为 18px，那么 1em = 18px。如下代码：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("p{font-size:12px;text-indent:2em;}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("上面代码就是可以实现段落首行缩进 24px（也就是两个字体大小的距离）。")]),s._v(" "),n("p",[s._v("特殊情况：")]),s._v(" "),n("p",[s._v("但当给 font-size 设置单位为 em 时，此时计算的标准以 p 的父元素的 font-size 为基础。如下代码：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("html:\n<p>以这个<span>例子</span>为例。</p>\ncss:\np{font-size:14px}\nspan{font-size:0.8em;}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("结果 span 中的字体“例子”字体大小就为 11.2px（14 * 0.8 = 11.2px）。")]),s._v(" "),n("p",[s._v("3、百分比")]),s._v(" "),n("p",[s._v("p{font-size:12px;line-height:130%}\n设置行高（行间距）为字体的130%（12 * 1.3 = 15.6px）。")]),s._v(" "),n("blockquote",[n("p",[n("strong",[s._v("Css设置")])])]),s._v(" "),n("h2",{attrs:{id:"水平居中设置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#水平居中设置"}},[s._v("#")]),s._v(" 水平居中设置")]),s._v(" "),n("h3",{attrs:{id:"行内元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#行内元素"}},[s._v("#")]),s._v(" 行内元素")]),s._v(" "),n("p",[s._v("我们在实际工作中常会遇到需要设置水平居中的场景，比如为了美观，文章的标题一般都是水平居中显示的。")]),s._v(" "),n("p",[s._v("这里我们又得分两种情况：行内元素 还是 块状元素 ，块状元素里面又分为定宽块状元素，以及不定宽块状元素。今天我们先来了解一下行内元素怎么进行水平居中？")]),s._v(" "),n("p",[s._v("如果被设置元素为文本、图片等行内元素时，水平居中是通过给父元素设置")]),s._v(" "),n("p",[s._v("text-align:center 来实现的。(父元素和子元素：如下面的html代码中，div是“我想要在父容器中水平居中显示”这个文本的父元素。反之这个文本是div的子元素 )如下代码：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('html代码：\n<body>\n  <div class="txtCenter">我想要在父容器中水平居中显示。</div>\n</body>\ncss代码：\n<style>\n  .txtCenter{\n    text-align:center;\n  }\n</style>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"块状元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#块状元素"}},[s._v("#")]),s._v(" 块状元素")]),s._v(" "),n("p",[s._v("当被设置元素为 块状元素 时用 text-align：center 就不起作用了，这时也分两种情况：定宽块状元素和不定宽块状元素。")]),s._v(" "),n("p",[s._v("这一小节我们先来讲一讲定宽块状元素。(定宽块状元素：块状元素的宽度width为固定值。)")]),s._v(" "),n("p",[s._v("满足定宽和块状两个条件的元素是可以通过设置“左右margin”值为“auto”来实现居中的。我们来看个例子就是设置 div 这个块状元素水平居中：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("html代码：\n\n<body>\n  <div>我是定宽块状元素，哈哈，我要水平居中显示。</div>\n</body>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("css代码：\n\n<style>\ndiv{\n    border:1px solid red;/*为了显示居中效果明显为 div 设置了边框*/\n    width:200px;/*定宽*/\n    margin:20px auto;/* margin-left 与 margin-right 设置为 auto */\n}\n</style>\n\n也可以写成：\nmargin-left:auto;\nmargin-right:auto;\n注意：元素的“上下 margin” 是可以随意设置的。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"不定宽度的块状元素"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不定宽度的块状元素"}},[s._v("#")]),s._v(" 不定宽度的块状元素")]),s._v(" "),n("p",[s._v("在实际工作中我们会遇到需要为“不定宽度的块状元素”设置居中，比如网页上的分页导航，因为分页的数量是不确定的，所以我们不能通过设置宽度来限制它的弹性。(不定宽块状元素：块状元素的宽度width不固定。)\n不定宽度的块状元素有三种方法居中（这三种方法目前使用的都很多）：")]),s._v(" "),n("p",[s._v("1.加入 table 标签")]),s._v(" "),n("p",[s._v("2.设置 display: inline 方法：与第一种类似，显示类型设为 行内元素，进行不定宽元素的属性设置")]),s._v(" "),n("p",[s._v("3.设置 position:relative 和 left:50%：利用 相对定位 的方式，将元素向左偏移 50% ，即达到居中的目的")]),s._v(" "),n("h4",{attrs:{id:"第一种方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一种方法"}},[s._v("#")]),s._v(" 第一种方法：")]),s._v(" "),n("p",[s._v("为什么选择方法一加入table标签? 是利用table标签的长度自适应性---即不定义其长度也不默认父元素body的长度（table其长度根据其内文本长度决定），因此可以看做一个定宽度块元素，然后再利用定宽度块状居中的margin的方法，使其水平居中。")]),s._v(" "),n("p",[s._v("第一步：为需要设置的居中的元素外面加入一个 table 标签 ( 包括 "),n("code",[s._v("<tbody>、<tr>、<td>")]),s._v(")。\n第二步：为这个 table 设置“左右 margin 居中”（这个和定宽块状元素的方法一样）。\n举例如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("html代码：\n<div>\n <table>\n  <tbody>\n    <tr><td>\n    <ul>\n        <li>我是第一行文本</li>\n        <li>我是第二行文本</li>\n        <li>我是第三行文本</li>\n    </ul>\n    </td></tr>\n  </tbody>\n </table>\n</div>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("css代码：\n\n<style>\ntable{\n    border:1px solid;\n    margin:0 auto;\n}\n</style>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("h4",{attrs:{id:"水平居中总结-不定宽块状元素方法-二"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#水平居中总结-不定宽块状元素方法-二"}},[s._v("#")]),s._v(" 水平居中总结-不定宽块状元素方法（二）")]),s._v(" "),n("p",[s._v("这种效果的方法，改变元素的display类型为行内元素，利用其属性直接设置。\n第二种方法：改变块级元素的 display 为 inline 类型（设置为 行内元素 显示），然后使用 text-align:center 来实现居中效果。如下例子：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('html代码：\n<body>\n<div class="container">\n    <ul>\n        <li><a href="#">1</a></li>\n        <li><a href="#">2</a></li>\n        <li><a href="#">3</a></li>\n    </ul>\n</div>\n</body>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("css代码：\n<style>\n.container{\n    text-align:center;\n}\n/* margin:0;padding:0（消除文本与div边框之间的间隙）*/\n.container ul{\n    list-style:none;\n    margin:0;\n    padding:0;\n    display:inline;\n}\n/* margin-right:8px（设置li文本之间的间隔）*/\n.container li{\n    margin-right:8px;\n    display:inline;\n}\n</style>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("p",[s._v("这种方法相比第一种方法的优势是不用增加无语义标签，但也存在着一些问题：它将块状元素的 display 类型改为 inline，变成了行内元素，所以少了一些功能，比如设定长度值。")]),s._v(" "),n("h4",{attrs:{id:"方法三"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#方法三"}},[s._v("#")]),s._v(" 方法三：")]),s._v(" "),n("p",[s._v("通过给父元素设置 float，然后给父元素设置 position:relative 和 left:50%，子元素设置 position:relative 和 left: -50% 来实现水平居中。\n我们可以这样理解：假想ul层的父层（即下面例子中的div层）中间有条平分线将ul层的父层（div层）平均分为两份，ul层的css代码是将ul层的最左端与ul层的父层（div层）的平分线对齐；而li层的css代码则是将li层的平分线与ul层的最左端（也是div层的平分线）对齐，从而实现li层的居中。\n代码如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<body>\n<div class="container">\n    <ul>\n        <li><a href="#">1</a></li>\n        <li><a href="#">2</a></li>\n        <li><a href="#">3</a></li>\n    </ul>\n</div>\n</body>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("css代码：\n<style>\n.container{\n    float:left;\n    position:relative;\n    left:50%\n}\n.container ul{\n    list-style:none;\n    margin:0;\n    padding:0;\n    \n    position:relative;\n    left:-50%;\n}\n.container li{float:left;display:inline;margin-right:8px;}\n</style>\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("这三种方法使用得都非常广泛，各有优缺点，具体选用哪种方法，可以视具体情况而定。")]),s._v(" "),n("h4",{attrs:{id:"父元素高度确定的单行文本"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#父元素高度确定的单行文本"}},[s._v("#")]),s._v(" 父元素高度确定的单行文本")]),s._v(" "),n("p",[s._v("我们在实际工作中也会遇到需要设置垂直居中的场景，比如好多报纸的文章标题在左右一侧时，常常会设置为垂直居中，为了用户体验性好。\n这里我们又得分两种情况：父元素高度确定的单行文本，以及父元素高度确定的多行文本。")]),s._v(" "),n("h3",{attrs:{id:"父元素高度确定的单行文本-怎么设置它为垂直居中呢"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#父元素高度确定的单行文本-怎么设置它为垂直居中呢"}},[s._v("#")]),s._v(" 父元素高度确定的单行文本, 怎么设置它为垂直居中呢？")]),s._v(" "),n("p",[s._v("父元素高度确定的单行文本的竖直居中的方法是通过设置父元素的 height 和 line-height 高度一致来实现的。(height: 该元素的高度，line-height: 顾名思义，行高（行间距），指在文本中，行与行之间的 基线间的距离 )。\nline-height 与 font-size 的计算值之差，在 CSS 中成为“行间距”。分为两半，分别加到一个文本行内容的顶部和底部。\n这种文字行高与块高一致带来了一个弊端：当文字内容的长度大于块的宽时，就有内容脱离了块。\n如下代码：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('<div class="container">\n    hi,imooc!\n</div>\ncss代码：\n<style>\n.container{\n    height:100px;\n    line-height:100px;\n    background:#999;\n}\n</style>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"垂直居中-父元素高度确定的多行文本-方法二"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#垂直居中-父元素高度确定的多行文本-方法二"}},[s._v("#")]),s._v(" 垂直居中-父元素高度确定的多行文本（方法二）")]),s._v(" "),n("p",[s._v("除了上一节讲到的插入table标签，可以使父元素高度确定的多行文本垂直居中之外，本节介绍另外一种实现这种效果的方法。但这种方法兼容性比较差，只是提供大家学习参考。")]),s._v(" "),n("p",[s._v("在 chrome、firefox 及 IE8 以上的浏览器下可以设置块级元素的 display 为 table-cell（设置为表格单元显示），激活 vertical-align 属性，但注意 IE6、7 并不支持这个样式, 兼容性比较差。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('html代码：\n<div class="container">\n    <div>\n        <p>看我是否可以居中。</p>\n        <p>看我是否可以居中。</p>\n        <p>看我是否可以居中。</p>\n    </div>\n</div>\ncss代码：\n<style>\n.container{\n    height:300px;\n    background:#ccc;\n    display:table-cell;/*IE8以上及Chrome、Firefox*/\n    vertical-align:middle;/*IE8以上及Chrome、Firefox*/\n}\n</style>\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("这种方法的好处是不用添加多余的无意义的标签，但缺点也很明显，它的兼容性不是很好，不兼容 IE6、7而且这样修改display的block变成了table-cell，破坏了原有的块状元素的性质。")]),s._v(" "),n("h4",{attrs:{id:"隐性改变display类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#隐性改变display类型"}},[s._v("#")]),s._v(" 隐性改变display类型")]),s._v(" "),n("p",[s._v("有一个有趣的现象就是当为元素（不论之前是什么类型元素，display:none 除外）设置以下 2 个句之一：")]),s._v(" "),n("ol",[n("li",[s._v("position : absolute")]),s._v(" "),n("li",[s._v("float : left 或 float:right")])]),s._v(" "),n("p",[s._v("简单来说，只要html代码中出现以上两句之一，元素的display显示类型就会自动变为以 display:inline-block（块状元素）的方式显示，当然就可以设置元素的 width 和 height 了，且默认宽度不占满父元素。")])])}),[],!1,null,null,null);n.default=t.exports}}]);